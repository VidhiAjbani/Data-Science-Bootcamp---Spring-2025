-- Creating Tables
CREATE TABLE SALES (
    Date DATE,
    Order_id INT,
    Item_id INT,
    Customer_id INT,
    Quantity INT,
    Revenue DECIMAL(10,2)
);

CREATE TABLE ITEMS (
    Item_id INT PRIMARY KEY,
    Item_name VARCHAR(255),
    Price DECIMAL(10,2),
    Department VARCHAR(255)
);

CREATE TABLE CUSTOMERS (
    Customer_id INT PRIMARY KEY,
    First_name VARCHAR(255),
    Last_name VARCHAR(255),
    Address VARCHAR(255)
);

-- Inserting Sample Data for the Queries
INSERT INTO CUSTOMERS (Customer_id, First_name, Last_name, Address) VALUES
(1, 'John', 'Doe', '123 Main St'),
(2, 'Jane', 'Smith', '456 Oak St'),
(3, 'Alice', 'Johnson', '789 Pine St'),
(4, 'Bob', 'Brown', '321 Elm St');

INSERT INTO ITEMS (Item_id, Item_name, Price, Department) VALUES
(101, 'Laptop', 1200.00, 'Electronics'),
(102, 'Headphones', 100.00, 'Electronics'),
(103, 'Chair', 150.00, 'Furniture'),
(104, 'Notebook', 5.00, 'Stationery'),
(105, 'Pen', 2.00, 'Stationery');

INSERT INTO SALES (Date, Order_id, Item_id, Customer_id, Quantity, Revenue) VALUES
('2023-03-18', 1, 101, 1, 1, 1200.00),
('2023-03-18', 2, 102, 2, 2, 200.00),
('2023-01-15', 3, 103, 3, 1, 150.00),
('2022-11-20', 4, 101, 2, 1, 1200.00),
('2022-07-10', 5, 104, 4, 50, 250.00),
('2022-08-15', 6, 105, 4, 100, 200.00);

SELECT * FROM CUSTOMERS;
SELECT * FROM ITEMS;
SELECT * FROM SALES;

-- 1. Total number of orders completed on 18th March 2023
SELECT COUNT(DISTINCT Order_id) AS total_orders
FROM SALES
WHERE Date = '2023-03-18';

-- 2. Total number of orders completed on 18th March 2023 with first name 'John' and last name 'Doe'
SELECT COUNT(DISTINCT S.Order_id) AS total_orders
FROM SALES S
JOIN CUSTOMERS C ON S.Customer_id = C.Customer_id
WHERE S.Date = '2023-03-18' AND C.First_name = 'John' AND C.Last_name = 'Doe';

-- 3. Total number of customers who purchased in January 2023 and the average amount spent per customer
SELECT COUNT(DISTINCT Customer_id) AS total_customers, 
       AVG(Revenue) AS avg_spent_per_customer
FROM SALES
WHERE Date BETWEEN '2023-01-01' AND '2023-01-31';

-- 4. Departments that generated less than $600 in 2022
SELECT I.Department, SUM(S.Revenue) AS total_revenue
FROM SALES S
JOIN ITEMS I ON S.Item_id = I.Item_id
WHERE YEAR(S.Date) = 2022
GROUP BY I.Department
HAVING SUM(S.Revenue) < 600;

-- 5. Most and least revenue generated by an order
SELECT MAX(Revenue) AS max_revenue, MIN(Revenue) AS min_revenue
FROM SALES;

-- 6. Orders that were purchased in the most lucrative order
SELECT * FROM SALES
WHERE Revenue = (SELECT MAX(Revenue) FROM SALES);
